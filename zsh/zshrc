# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# History size
export HISTSIZE=10000
export SAVEHIST=$HISTSIZE

# Themes (random, agnoster, bira, bureau, gallois)
# ZSH_THEME="avit"
# Parth's prompt (gallois-like)
source $HOME/Dev/dotfiles/zsh/prompt.sh

# Plugins
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
plugins=(git virtualenv colored-man-pages colorize z zsh-syntax-highlighting zsh-autosuggestions vi-mode github docker)

HYPHEN_INSENSITIVE="true"
export EDITOR='vim'
export CHEATCOLORS=true

# Go path
export GOPATH=/home/luc/.go

# Set CapsLock to act as Escape on tap and Ctrl on hold
setxkbmap -option ctrl:nocaps
xcape -e 'Control_L=Escape'

# Deactivate ctrl-S to freeze the terminal
stty -ixon

# Aliases
# source /etc/zsh/zshenv
source $HOME/Dev/dotfiles/zsh/aliases

# Functions
source $HOME/Dev/dotfiles/zsh/functions

# Executes ls on dir change
chpwd() ls -v --group-directories-first

autoload -Uz compinit
compinit

# The next line updates PATH for the Google Cloud SDK.
# if [ -f '/home/luc/Downloads/software/google-cloud-sdk/path.zsh.inc' ]; then . '/home/luc/Downloads/software/google-cloud-sdk/path.zsh.inc'; fi
# The next line enables shell command completion for gcloud.
# if [ -f '/home/luc/Downloads/software/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/luc/Downloads/software/google-cloud-sdk/completion.zsh.inc'; fi

# Python virtualenvs
# VIRTUAL_ENV_DISABLE_PROMPT=0
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
# __conda_setup="$('/home/luc/.miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
# if [ $? -eq 0 ]; then
#     eval "$__conda_setup"
# else
#     if [ -f "/home/luc/.miniconda3/etc/profile.d/conda.sh" ]; then
#         . "/home/luc/.miniconda3/etc/profile.d/conda.sh"
#     else
#         export PATH="/home/luc/.miniconda3/bin:$PATH"
#     fi
# fi
# unset __conda_setup
# conda deactivate
# <<< conda initialize <<<

# Control functions{{{
# home
function go_back() {
	BUFFER="cd .."
	# zle end-of-line
	zle accept-line
}
zle -N go_back
bindkey "^b" go_back

# Edit and rerun
function edit_and_run() {
	BUFFER="fc"
	zle accept-line
}
zle -N edit_and_run
bindkey "^v" edit_and_run

# LS
function ctrl_l() {
        BUFFER="cl"
        zle accept-line
}
zle -N ctrl_l
bindkey "^w" ctrl_l

# Sudo
function add_sudo() {
        BUFFER="sudo !!"
        zle end-of-line
}
zle -N add_sudo
bindkey "^s" add_sudo
# }}}

# Config
source $ZSH/oh-my-zsh.sh
